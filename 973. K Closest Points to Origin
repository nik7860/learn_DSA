class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>ni;
        for(int i=0;i<points.size();i++){
            int a=points[i][0]*points[i][0];
            int b=points[i][1]*points[i][1];
            ni.push({a+b,{points[i][0],points[i][1]}});
            
        }
        
        while(k-- && !ni.empty()){
            
            ans.push_back({ni.top().second.first,ni.top().second.second});
            ni.pop();
            
        }
        
        
        
        return ans;
    }
};
